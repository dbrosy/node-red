version: "3.7"

services:
# Define an node-red service
  node-red:
    image: nodered/node-red:latest
    container_name: tracker-node-red
    environment:
      - TZ=Australia/Sydney
    ports:
      - "1880:1880"
    volumes:
      - node-red-data:/data
  # Define an InfluxDB service
  influxdb:
    image: "influxdb:${INFLUXDB_VERSION}"
    container_name: tracker-influxdb
    restart: unless-stopped
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"   
  # Define a Chronograf service
  chronograf:
    image: "chronograf:${CRONOGRAF_VERSION}"
    container_name: tracker-chronograf
    restart: unless-stopped
    environment:
      INFLUXDB_URL: http://influxdb:8086
    ports:
      - "8888:8888"
    links:
      - influxdb
  # Define a service using Grafana
  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    container_name: tracker-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/grafana/provisioning/datasources/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - grafana-data:/var/lib/grafana

volumes:
  grafana-data:
  node-red-data:
